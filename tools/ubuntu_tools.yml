---
- name: Preparing Workstation
  hosts: localhost
  connection: local
  tasks:

    - name: Installing Linux Apps
      become: true
      apt:
        name: '{{ item }}'
        install_recommends: yes
        state: present
      loop:
          - vim
          - htop
          - curl
          - wget
          - ncdu
          - tree
          - apt-transport-https
          - ca-certificates
          - gnupg
          - python3-pip
          - make
          - git
          - bash-completion
          - gnupg-agent
          - zsh
          - virtualbox
          - mlocate
          - krita
          - jq
          - mtr
          - snapd
          - flatpak

    - block:
      - name: Installing nodeJS
        shell: 
          cmd: 'curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -'
          warn: false
      - name: Installing npm
        become: true
        apt:
          name: nodejs

    - block:
      - name: Verify if Oh-My-zsh is installed
        command: test -d /home/{{ ansible_user_id }}/.oh-my-zsh
        register: ohmyzsh
        ignore_errors: true
      - name: Installing Oh-My-zsh
        shell:
          cmd: 'curl -fsL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | bash'
          warn: false
        when: ohmyzsh.rc != 0
      - name: Changing Default Shell to ZSH
        become: yes
        user: 
          name: '{{ ansible_user_id }}'
          shell: /bin/zsh
      - name: Downloading ZSH Theme Spaceship
        become: true
        git:
          repo: 'https://github.com/denysdovhan/spaceship-prompt.git'
          dest: /home/{{ ansible_user_id }}/.oh-my-zsh/custom/themes/spaceship-prompt
      - name: Creating Symlink to Theme Spaceship
        file:
            src: '/home/{{ ansible_user_id }}/.oh-my-zsh/custom/themes/spaceship-prompt/{{ item }}'
            dest: '/home/{{ ansible_user_id }}/.oh-my-zsh/custom/themes/{{ item }}'
            state: link
        with_items:
            - spaceship.zsh-theme
      - name: Changing Default ZSH Theme to Spaceship
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          regexp: '^ZSH_THEME='
          line: 'ZSH_THEME="spaceship"'
      - name: Creating ZSH Completion folder
        file:
          path: /home/{{ ansible_user_id }}/.oh-my-zsh/completions
          state: directory
          mode: 0755
      - name: Adding autoload to compinit
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          line: 'autoload -U compinit && compinit'
          state: present
      - name: Downloading Dracula Terminal
        git: 
          repo: 'https://github.com/dracula/{{ item }}'
          dest: /home/{{ ansible_user_id }}/{{ item }}
        with_items:
            - gnome-terminal 
    - name: Installing AWS CLI via pip3
      become: true
      pip:
        name: awscli
        executable: pip3

    - name: Updating repositories
      become: true
      apt:
        update_cache: yes

    - name: Installing Dependencies to Ruby-2.7.6
      become: true
      apt:
        name: '{{ item }}'
        install_recommends: yes
        state: present
      loop:
          - autoconf 
          - bison 
          - build-essential 
          - libssl-dev 
          - libyaml-dev 
          - libreadline6-dev 
          - zlib1g-dev 
          - libncurses5-dev 
          - libffi-dev 
          - libgdbm6 
          - libgdbm-dev 
          - libdb-dev
          - g++
          - gcc 
          - autoconf 
          - automake 
          - bison 
          - libc6-dev 
          - libffi-dev 
          - libgdbm-dev 
          - libncurses5-dev 
          - libsqlite3-dev 
          - libtool 
          - libyaml-dev 
          - pkg-config 
          - sqlite3 
          - zlib1g-dev 
          - libgmp-dev 
          - libreadline-dev 
          - libssl-dev

    - block:
      - name: Installing Homebrew
        shell: 
          cmd: 'curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh'
          warn: false       

      - name: Installing Rbenv
        shell: 
          cmd: 'curl -fsSL https://github.com/rbenv/rbenv-installer/raw/HEAD/bin/rbenv-installer | bash'
          warn: false         
 
    - block:
      - name: flathub flatpak repo
        become: true
        community.general.flatpak_remote:
          name: flathub
          state: present
          flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
          method: system

      - name: Flatpak install package Figma
        community.general.flatpak:
          name: io.github.Figma_Linux.figma_linux
          state: present

      - name: Flatpak install packages Gimp
        community.general.flatpak:
          name: org.gimp.GIMP
          state: present      
          
      - name: Flatpak install package Mailspring
        community.general.flatpak:
          name: com.getmailspring.Mailspring
          state: present      
          
      - name: Flatpak install package Teams
        community.general.flatpak:
          name: com.microsoft.Teams
          state: present

      - name: Flatpak install package Obs-Studio
        community.general.flatpak:
          name: com.obsproject.Studio
          state: present      
          
      - name: Flatpak install package VLC
        community.general.flatpak:
          name: org.videolan.VLC
          state: present      

      - name: Flatpak install package DataGrip
        community.general.flatpak:
          name: com.jetbrains.DataGrip
          state: present       

      - name: Flatpak install package Android-Studio
        community.general.flatpak:
          name: com.google.AndroidStudio
          state: present       
      
      - name: Flatpak install package Slack
        community.general.flatpak:
          name: com.slack.Slack
          state: present         
          
      - name: Flatpak install package IntelliJ-Ultimate
        community.general.flatpak:
          name: com.jetbrains.IntelliJ-IDEA-Ultimate
          state: present        
          
      - name: Flatpak install package Edge
        community.general.flatpak:
          name: com.microsoft.Edge
          state: present        
    
    - block:
      - name: Snap install packages with tag
        become: true
        snap: 
            name: '{{ item }}'
        loop:
            - barrier
            - notion-snap
            - postman
            - bpytop

      - name: Snap install packages with tag classic
        become: true
        snap: 
            name: '{{ item }}'
            classic: yes
        loop:
            - code
            - flutter

    - block: 
      - name: Adding Teamviewer Repository
        become: true
        shell: 
          cmd: 'echo "deb http://linux.teamviewer.com/deb stable main" >> /etc/apt/sources.list.d/teamviewer.list'
          warn: false      
      - name: Install Teamviewer Key
        become: true
        apt_key: 
          url: 'https://download.teamviewer.com/download/linux/signature/TeamViewer2017.asc'
          state: present
      - name: Updating repositories
        become: true
        apt:
         update_cache: yes
      - name: Installing Teamviewer
        become: true
        apt:
          name: teamviewer

    - block: 
      - name: Install Gnome-Tweak-Tool
        become: true
        apt:
          name: gnome-tweak-tool          
          
      - name: Install Gnome-Tweaks
        become: true
        apt:
          name: gnome-tweaks  

    - block:
      - name: Install Google Key
        become: true
        apt_key: 
          url: 'https://dl.google.com/linux/linux_signing_key.pub'
          state: present
      - name: Install Google Repository
        become: true
        shell: 
          cmd: 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          warn: false      
      - name: Updating repositories
        become: true
        apt:
         update_cache: yes          
      - name: Install Google Chrome
        become: true
        apt:
          name: google-chrome-stable

    - block:
      - name: Installing Vagrant 2.2.19
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/vagrant/2.2.19/vagrant_2.2.19_linux_amd64.zip'
          dest: /usr/local/bin
          remote_src: yes

    - block:
      - name: Installing Terraform 0.12.31
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/terraform/0.12.31/terraform_0.12.31_linux_amd64.zip'
          dest: /usr/local/bin
          remote_src: yes
      - name: Renaming terraform12 binary
        become: true
        command: mv /usr/local/bin/terraform /usr/local/bin/terraform12
      - name: Installing Terraform 0.13.7 
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/terraform/0.13.7/terraform_0.13.7_linux_amd64.zip'
          dest: /usr/local/bin
          remote_src: yes
      - name: Renaming terraform13 binary
        become: true
        command: mv /usr/local/bin/terraform /usr/local/bin/terraform13
      - name: Installing Terraform 0.14.11
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/terraform/0.14.11/terraform_0.14.11_linux_amd64.zip'
          dest: /usr/local/bin
          remote_src: yes
      - name: Renaming terraform14 binary
        become: true
        command: mv /usr/local/bin/terraform /usr/local/bin/terraform14
      - name: Installing Terraform 0.15.0
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/terraform/0.15.5/terraform_0.15.5_linux_amd64.zip'
          dest: /usr/local/bin
          remote_src: yes
      - name: Renaming terraform15 binary
        become: true
        command: mv /usr/local/bin/terraform /usr/local/bin/terraform15
      - name: Installing Terraform 1.0.4
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/terraform/1.0.4/terraform_1.0.4_linux_amd64.zip'
          dest: /usr/local/bin
          remote_src: yes
      - name: Renaming terraform1 binary
        become: true
        command: mv /usr/local/bin/terraform /usr/local/bin/terraform1

    - block:
      - name: Installing Vault 1.11.2
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/vault/1.11.2/vault_1.11.2_linux_amd64.zip'
          dest: /usr/local/bin
          remote_src: yes

    - block:
      - name: Installing gomplate 3.11.2
        become: true
        get_url:    
          url: 'https://github.com/hairyhenderson/gomplate/releases/download/v3.11.2/gomplate_linux-amd64'
          dest: /usr/local/bin/gomplate
          mode: 755

    - block:
      - name: Installing Stern 1.11.0
        become: true
        get_url:    
          url: 'https://github.com/wercker/stern/releases/download/1.11.0/stern_linux_amd64'
          dest: /usr/local/bin/stern
          mode: 755

    - block:
      - name: Install Google Cloud SDK Key
        become: true
        apt_key:
          url: 'https://packages.cloud.google.com/apt/doc/apt-key.gpg'
          state: present
      - name: Install Google Cloud SDK Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://packages.cloud.google.com/apt cloud-sdk main'
          state: present
          filename: google-cloud-sdk
      - name: Install Google Cloud SDK
        become: true
        apt:
          name: google-cloud-sdk
          
    - block:
      - name: Install Microsoft Key
        become: true
        apt_key:
          url: 'https://packages.microsoft.com/keys/microsoft.asc'
          state: present

    - block: 
      - name: Install Docker Key
        become: true
        apt_key:
          url: 'https://download.docker.com/linux/ubuntu/gpg'
          state: present
      - name: Install Docker Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable'
          state: present
          filename: docker-ce
      - name: Install Docker
        become: true
        apt:
          name: docker-ce
      - name: Adding existing user to group Docker
        become: yes
        user: 
          name: '{{ ansible_user_id }}'
          groups: docker 
          append: yes
      - name: Install Docker-Compose
        become: true
        get_url:
          url: 'https://github.com/docker/compose/releases/download/1.26.2/docker-compose-Linux-x86_64'
          dest: '/usr/local/bin/docker-compose'
          mode: 755
      - name: Install Docker Machine Bash Completion
        become: true
        get_url:
          url: 'https://raw.githubusercontent.com/docker/machine/v0.16.0/contrib/completion/bash/docker-machine.bash'
          dest: '/etc/bash_completion.d/docker-machine'
      - name: Install Docker-Compose Bash Completion
        become: true
        get_url:
          url: 'https://raw.githubusercontent.com/docker/compose/1.26.2/contrib/completion/bash/docker-compose'
          dest: '/etc/bash_completion.d/docker-compose'
      - name: Install Docker-Compose and Docker Machine Zsh Completion
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          regexp: '^plugins='
          line: 'plugins=(git docker docker-compose)'
        
    - block:
      - name: Installing Kubectl 1.24.0
        become: true
        get_url:    
          url: 'https://dl.k8s.io/release/v1.24.0/bin/linux/amd64/kubectl'
          dest: /usr/local/bin/kubectl
          mode: 755
      - name: Downloading Kubectx and Kubens 
        become: true
        git:
          repo: 'https://github.com/ahmetb/kubectx'
          dest: /opt/kubectx 
      - name: Creating Symlink to kubectx and kubens 
        become: true
        file:
          src: '/opt/kubectx/{{ item }}'
          dest: '/usr/local/bin/{{ item }}'
          state: link
        with_items:
          - kubectx
          - kubens  
    - block:
      - name: Adding Oracle Java 17 Repository
        become: true
        apt_repository:
          repo: 'ppa:linuxuprising/java'

      - name: Installing Repository Java 17 
        become: true
        shell: 
          cmd: 'echo "deb http://ppa.launchpad.net/linuxuprising/java/ubuntu focal main" | tee /etc/apt/sources.list.d/linuxuprising-java.list'
          warn: false      

      - name: Importing Oracle Java 17 repository key
        become: true
        apt_key:
          keyserver: hkp://keyserver.ubuntu.com:80
          id: 73C3DB2A
          state: present

      - name: Updating repositories
        become: true
        apt:
         update_cache: yes

      - name: Installing Oracle Java 17 
        become: true
        apt:
          name: oracle-java17-installer 
          state: latest
          install_recommends: yes

      - name: Accept Licenses
        shell: 
          cmd: 'echo oracle-java17-installer shared/accepted-oracle-license-v1-2 select true | sudo /usr/bin/debconf-set-selections'
          warn: false  

    - block:
      - name: Adding Longsleep/Golang Backports Repository
        become: true
        apt_repository:
          repo: 'ppa:longsleep/golang-backports'
      - name: Install Golang 
        become: true
        apt:
          name: golang-go
    - block:
      - name: Adding Ubuntu Mainline Kernel Repository
        become: true
        apt_repository: 
          repo: 'ppa:cappelikan/ppa'
          state: present
      - name: Installing Ubuntu Mainline Kernel
        become: true
        apt: 
          name: mainline 

    - block:
      - name: Adding CoreCtrl Repository
        become: true
        apt_repository: 
          repo: 'ppa:ernstp/mesarc'
          state: present
      - name: Installing CoreCtrl
        become: true
        apt: 
          name: corectrl

    - block:
      - name: Install a .deb package Insomnia
        become: true
        apt:
          deb: https://updates.insomnia.rest/downloads/ubuntu/latest?&app=com.insomnia.app&source=website
    
    - block:
      - name: Upgrade all packages to the latest version
        become: true
        apt:
          name: "*"
          state: latest

      - name: Remove dependencies that are no longer required
        become: true
        apt:
          autoremove: yes     

      - name: Remove useless packages from the cache
        become: true
        apt:
          autoclean: yes


# # Optional installation

    # - block: 
    #   - name: Enable the 32-bit architecture to wine
    #     become: true
    #     shell:
    #       cmd: 'dpkg --add-architecture i386' 
    #       warn: false
    #   - name: Importing WineHQ repositorys GPG key
    #     become: true
    #     apt_key:
    #       url: 'https://dl.winehq.org/wine-builds/winehq.key'
    #       state: present      
    #   - name: Adding WineHQ repository
    #     become: true
    #     apt_repository:
    #       repo: '"deb http://dl.winehq.org/wine-builds/ubuntu/ $(lsb_release -cs) main"'
    #       state: present
    #   - name: Installing wine
    #     become: true
    #     apt:
    #       name: winehq-stable
          
  #  - block:
  #    - name: Install Jenkins Key
  #      become: true
  #      apt_key:
  #        url: 'https://pkg.jenkins.io/debian-stable/jenkins.io.key'
  #        state: present
  #    - name: Add Jenkins sourcelist
  #      become: true
  #      shell: 
  #        cmd: 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
  #        warn: false
  #    - name: Updating repositories
  #      become: true
  #      apt:
  #        update_cache: yes
  #    - name: Installing Jenkins
  #      become: true
  #      apt:
  #        name: jenkins
  #    - name: Starting Jenkins service
  #      become: true
  #      command: 'systemctl start jenkins'      
  #    - name: Allowing Jenkins on the port 8080
  #      become: true
  #      shell: 
  #        cmd: 'ufw allow 8080 && ufw enable'
  #        warn: false